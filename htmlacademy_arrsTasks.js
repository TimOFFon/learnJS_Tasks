/*
Есть массив symbols1, в котором хранится алфавит (буквы и другие символы).
Есть массив encodedMessage1, в котором хранится зашифрованное сообщение.
Каждый элемент этого массива — это индекс символа из массива symbols.
Скрипт дешифровки должн переводить элементы из массива с шифровкой 
(encodedMessage1) в символы из массива алфавита (symbols1) и склеивать из
них расшифрованную строку. Эту строку запиши в переменную decodedMessage1.
*/

let symbols1 = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З',
        'И', 'Й', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У',
        'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я',
        'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к',
        'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц',
        'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я', ' ', '.', ',',
        '—', '!'];



// Закодированное сообщение

let encodedMessage1 = [18, 38, 46, 62, 66,
    50, 33, 41, 66, 49, 48, 38, 58, 62,
    68, 66, 48, 37, 42, 47, 66, 50, 33,
    41, 66, 49, 48, 51, 49, 42, 67];



// Раскодированное сообщение

let decodedMessage1 = '';



//----------------------------------------------- Решение:
function decodingMessage() {
    for (let i = 0; i <= encodedMessage.length - 1; i++) {
        decodedMessage += symbols[encodedMessage[i]];
        console.log(decodedMessage);
        };
};

// decodingMessage();



//=========================================================================
//=========================================================================
/*
Напиши скрипт, который формирует заказ в виде строки.
Массив с вариантами основы для смузи записан в переменную liquids.
Массив с фруктами находится в переменной fruits.
Массив с зеленью записан в переменную greens.
Выбор посетителя записан в виде чисел в переменные 
chosenLiquid (индекс выбранной основы для смузи),
chosenFruit (выбранный фрукт),
chosenGreen (выбранная зелень).
Обрати внимание, что посетители выбирают пункты в электронном меню,
где нумерация начинается с единицы, а не с нуля, как в массивах.
Учти это при решении.
Собери строку с заказом посетителя вида
'Основа — ' + основа для смузи + ', фрукт — ' + выбранный фрукт
+ ', зелень — ' + выбранная зелень. 
Запиши результат в переменную order.
*/

// Состав смузи
let liquids = ['вода', 'молоко', 'сок', 'чай', 'йогурт'];
let fruits = ['киви', 'банан', 'персик', 'манго', 'груша', 'ананас'];
let greens = ['мята', 'шпинат', 'руккола', 'петрушка', 'базилик'];


// Выбор посетителя
let chosenLiquid = 1;
let chosenFruit = 3;
let chosenGreen = 2;


// Заказ
let order = '';

//--------------------------------------------------------Решение


function orderingSmuse() {
    order = 'Основа — ' + liquids[chosenLiquid - 1] + 
', фрукт — ' + fruits[chosenFruit -1] + 
', зелень — ' + greens[chosenGreen - 1];

console.log(order);
}

// orderingSmuse();


//============================================================================
//============================================================================
/*
Напиши скрипт, который составит из элементов массива список покупок.
В результате должна получиться строка с элементами массива через запятую вида
'элемент, элемент, элемент'.
Каждый элемент должен быть отделён запятой,
точка в конце строки не нужна. И помни про пробелы перед всеми словами,
кроме первого.
Элементы должны добавляться в строку последовательно, начиная 
с самого первого элемента массива, заканчивая последним.
Массив с покупками записан в переменную groceries.
Строку со списком покупок записывай в переменную shoppingList.
*/

let groceries = ['чай', 'шпроты', 'печенье', 'сахар', 'чипсы'];

let shoppingList = '';


//-------------------------------------------------------------------Решение:

function groceriesList() {
    let comma = ', '

for (let i = 0; i <= groceries.length -1; i++) {
if (groceries[i] !== groceries[groceries.length - 1]) {
    groceries[i] += comma;  
    }   
    shoppingList += groceries[i];
}
console.log(shoppingList);
};

groceriesList();



//============================================================================
//============================================================================
//----------------------------------------------------------------   Условие:
/*
Напишите скрипт, который будет находить последний индекс элемента вмассиве.
Массив записан в переменную numbers2.
Элемент, последний индекс которого надо найти, записан в переменную number.
Создайте переменную lastIndex и записывайте в неё последний индекс числа number.
Если числа number в массиве нет, переменная lastIndex должна быть равна -1.
*/

let numbers2 = [2, 4, 7, 4, 7, 2];

let number2 = 4;



//-------------------------------------------------------------------Решение:

function findLastIndex () {
    let lastIndex = 0;
    for (let i = 0; i <= numbers2.length - 1; i++) {
        console.log(numbers2[i]);
            if (numbers2[i] == number2) {
                lastIndex = i;
            }
            if (lastIndex == 0) {
                lastIndex = -1;
            }
        }
    console.log('Индекс: ' + lastIndex);
};

// findLastIndex();

//=============================================================================
//=============================================================================
//-------------------------------------------------------------------- Условие:
/*
Напиши скрипт, который на основе одного массива c багажом создаст другой.
Изначальный массив с багажом записан в переменную luggage.
Индекс элемента,
с которого нужно начинать добавлять багаж (включая этот элемент),
записан в переменную startIndex.
Количество элементов, которые нужно взять
с собой записано в переменную quantity.
Собери новый массив на основе изначального, добавляя элементы
последовательно (от меньшего индекса к большему). 
Выбирай определённое количество элементов из массива luggage,
начиная с элемента с индексом startIndex, и добавляй их в новый массив.
Он должен быть записан в переменную chosenLuggage.
Для добавления элементов в новый массив можешь использовать
команду array.push().
*/

let luggage = ['пакет', 'мяч', 'тапки', 'когтеточка', 'коробка', 'миска',
'мята'];

let startIndex = 2;

let quantity = 3;

let chosenLuggage = [];



//-------------------------------------------------------------------  Решение:


function luggageForTravel() {
    for (let i = startIndex; i < (startIndex + quantity); i++) {
        chosenLuggage.push(luggage[i]);
    }
};

// luggageForTravel();


//=============================================================================
//=============================================================================
//---------------------------------------------------------------- Условие:
/*
Напиши скрипт, который на основе одного массива с книгами
создаст другой.
Массив книг записан в переменную books.
В переменную minNumber записано минимальное количество букв
в названии книги (включительно),
а в переменную maxNumber записано максимальное число букв (включительно).
Чтобы найти количество букв в названии, используй команду строка.length.
Собери новый массив на основе изначального,
добавляя элементы последовательно (от меньшего индекса к большему).
Результат запиши в переменную filteredBooks.
Для добавления элементов в новый массив используй команду array.push().
*/

let books = ['Улисс', 'Маугли', 'Сияние', 'Ревизор', 'Гамлет',
 'Обломов', 'Дюймовочка', 'Шантарам', 'Вий',
 'Сильмариллион', 'Оно'];


let minNumber = 3;

let maxNumber = 5;

let filteredBooks = [];



//-----------------------------------------------------------------  Решение:
function newLibrary() {
    for (let k = 0; k <= books.length -1; k++) {
        if (books[k].length >= minNumber && books[k].length <= maxNumber) {
            filteredBooks.push(books[k]);
            }
        }     
        console.log(filteredBooks);
};

// newLibrary();


//===============================================================================
//===============================================================================
//----------------------------------------------------------------- Условие
/*
Есть массив symbols, в котором хранится алфавит (буквы и другие символы).
Есть массив encodedMessage, в котором хранится зашифрованное сообщение.
Каждый элемент этого массива — это индекс символа из массива symbols.
Индексы сдвинуты на величину в переменной shift.
Пример: элемент из зашифрованного массива равен единице,
значит с учётом сдвига десять это символ с индексом одиннадцать
в массиве с алфавитом, то есть «К».
Программа дешифровки должна переводить элементы из массива с шифровкой
в символы из массива алфавита и склеивать из них расшифрованную строку.
Эту строку храним в переменной decodedMessage.
Если индекс со смещением выходит за пределы алфавита,
то нужно вычесть из этого индекса длину алфавита
(большие индексы шифруют символы в начале алфавита).
*/

let  symbols = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З',
'И', 'Й', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У',
'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я',
'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к',
'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц',
'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я', ' ', '.', ','
, '—', '!'];



// Смещение

let shift = 10;



// Закодированное сообщение

let encodedMessage = [8, 28, 36, 52, 56, 40, 23, 31, 56, 39,
38, 28, 48, 52, 58, 56, 38, 27, 32, 37, 56, 40, 23, 31, 56,
39, 38, 41, 39, 32, 57, 62];



// Раскодированное сообщение

let decodedMessage = '';



//------------------------------------------------------------------ Решение:

function deCodingMassage() {
    for ( var i = 0; i <= encodedMessage.length - 1; i++) {
        if (shift + encodedMessage[i] > symbols.length) {
            decodedMessage += symbols[shift + encodedMessage[i] - symbols.length];
        } else {
        decodedMessage += symbols[shift + encodedMessage[i]];
        }
        }
};

// deCodingMassage();

//==============================================================================
//==============================================================================
//----------------------------------------------------------------  Условие:
/*
Напиши скрипт, который будет собирать статистику из пользовательских данных.
Массив с данными записан в переменную usersData.
Найди все элементы массива с данными, в которых содержится определённая строка.
Эта искомая строка записана в переменную query.
Количество подходящих элементов (пользователей), которые подходят под критерий,
запиши в переменную matchingUsers.
Чтобы проверить наличие строки в элементе массива, используй команду indexOf().
*/

let usersData = ["Людмила Сергеевна","Мария Петровна","Валерия Брониславовна",
"Елена Васильевна",
"Людмила Львовна","Елена Сергеевна","Екатерина Максимовна"];


let query = 'Елена';

let matchingUsers = 0;

//-------------------------------------------------------------------- Решение:

function dataMining() { 
    for (let i = 0; i <= usersData.length - 1 ; i++) {
        console.log(usersData[i].indexOf(query));
        if (usersData[i].indexOf(query) >= 0) {
        matchingUsers++ ;
        }
    }
    console.log(matchingUsers);
};

// dataMining();


//===============================================================================
//===============================================================================
//-----------------------------------------------------------------  Условие:
/*
Напиши скрипт, который считает числа Фибоначчи и последовательно
записывает эти числа в массив.
Массив записан в переменную fibonacciNumbers.
Первые два числа уже находятся в этом массиве.
Вам нужно дополнить массив: найти следующие числа в последовательности
и записать каждое из них по порядку в массив.
Количество новых чисел в массиве ограничено.
В переменной numbersQuantity указано сколько чисел нужно добавить в массив.
Это значение не включает в себя два числа, которые изначально даны в массиве.
*/


let  fibonacciNumbers = [1, 1];

let numbersQuantity = 7;



//------------------------------------------------------------------ Решение:

function countingFibanachi() {
    for (let i = 0; i < numbersQuantity; i++) {
        fibonacciNumbers.push(fibonacciNumbers[i] + fibonacciNumbers[1 + i]);
        } 
        console.log(fibonacciNumbers);
};

countingFibanachi();

//===============================================================================
//===============================================================================
//----------------------------------------------------------------  Условие:
/*
Напиши скрипт, который будет следить за спортивными показателями.
В переменную indicators записан массив с моими спортивными характеристиками.
В массив levels записаны уровни каждого показателя. Каждый элемент этого
массива соответствует по индексу элементу массива indicators.
В зависимости от времени тренировки, прокачиваются разные показатели.
Время тренировки указано в минутах и записано в переменную trainingTime.
Если тренировка длится до 30 минут включительно, увеличивай скорость
и ловкость на 3.
Если тренировка от 30 минут (не включая это значение)
до одного часа (включая это значение), увеличивай гибкость на 3.
Если тренировка длится больше одного часа (не включая это значение),
увеличивай силу и выносливость на 2.
*/


let indicators = ['сила','гибкость', 'выносливость', 'скорость',  'ловкость'];

let levels = [8, 15, 9, 12, 11];

let trainingTime = 30;



//-----------------------------------------------------------------   Решение:

function fitnesTracker() {
    for (let i = 0; i < indicators.length; i++) {
        if (trainingTime <= 30) {
            if (indicators[i].indexOf('скорость') != -1) {
            levels[i] = levels[i] + 3;
            }
            if (indicators[i].indexOf('ловкость') != -1) {
            levels[i] = levels[i] + 3;
            }
        }
        if (trainingTime > 30 && trainingTime <= 60) {
            if (indicators[i].indexOf('гибкость') != -1) {
            levels[i] = levels[i] + 3;
            }
        }
        if (trainingTime > 60) {
            if (indicators[i].indexOf('сила') != -1) {
            levels[i] = levels[i] + 2;
            }
                    if (indicators[i].indexOf('выносливость') != -1) {
            levels[i] = levels[i] + 2;
            }
        }
    }
        console.log(levels);
};

// fitnesTracker();

//==============================================================================
//==============================================================================
//-----------------------------------------------------------------  Условие:
/*
Напишите скрипт, который создаёт массив уникальных значений 
(тех, что не повторяются), взятых из первого массива.
Исходный массив записан в переменную numbers.
Переберите массив и последовательно добавьте уникальные значения 
в массив uniqueNumbers. 
Для добавления новых элементов в массив можете использовать метод
array.push().
*/
let numbers3 = [101,15,116,20,116,15,2];

let uniqueNumbers = [];


//-------------------------------------------------------------------  Решение:

function creatingUnicArr() {
    for (let i = 0; i < numbers3.length; i++) {
        let valueBox = numbers3[i];
        numbers3[i] = 'x';
        if (numbers3.indexOf(valueBox) == -1) {
            uniqueNumbers.push(valueBox);
            }
        numbers3[i] = valueBox;
    }
    console.log(uniqueNumbers);
};

// creatingUnicArr();

//===============================================================================
//===============================================================================
//--------------------------------------------------------------------- Условие:
/*
Напишите скрипт, который меняет массив так, чтобы его элементы шли
в обратном порядке.
Массив записан в переменную numbers.
Обратите внимание, что вам нужно
поменять порядок элеменов в массиве numbers.
Создавать другую переменную для новой версии массива не нужно.
*/

let numbers4 = [1, 3, 5, 7, 9, 11];


//--------------------------------------------------------------------  Решение:

function flippingArr() {
    if (numbers.length % 2 != 0) {
        let medianIndex = (numbers.length - 1) / 2;
        for (let i = 0; i < medianIndex; i++) {
            let valueBox = numbers[i];
            numbers[i] = numbers[numbers.length - 1 - i];
            numbers[numbers.length - 1 - i] = valueBox;
        };
    };
        if (numbers.length % 2 == 0) {
            let medianLeft = (numbers.length / 2) - 1;
            let medianRight = numbers.length / 2;
                for (let j = 0; j <= medianLeft; j++) {
                let valueBoxJ = numbers[j];
                numbers[j] = numbers[numbers.length - 1 - j];
                numbers[numbers.length - 1 - j] = valueBoxJ;
                console.log(numbers);
        };
    };
};

// flippingArr();


//===============================================================================
//===============================================================================
//------------------------------------------------------------------ Условие:
/*
Напиши сортировку массива выбором.
Массив записан в переменную numbers.
Отсортируй значения в массиве по возрастанию, от самого маленького значения
к наибольшему.
                                  a=a+b;
                                  b=a-b;
                                  a=a-b;
*/


let  numbers = [3, 5, 2, 1, 6, 15];


//------------------------------------------------------------------ Решение:

function sortingArr() {
    for (let j = 0; j < numbers.length; j++) {
        for (let i = 0; i < numbers.length; i++) {
            if (numbers[i] > numbers[i+ 1] ) {
                numbers[i] = numbers[i] + numbers[i+ 1];
                numbers[i+ 1] = numbers[i] - numbers[i+ 1];
                numbers[i] = numbers[i] - numbers[i+ 1];
            }
        }
    }
        console.log(numbers)
};

// sortingArr();
