// Declaration -------------------------------------------------------------------------------

//Обязателен ли "else"?
/* Следующая функция возвращает true, если параметр age больше 18.

В ином случае она запрашивает подтверждение через confirm и возвращает его результат: */
function checkAge(age) {
    if (age > 18) {
        return true;
    } else {
        // ...
        return confirm('Родители разрешили?');
    }
}
//Будет ли эта функция работать как-то иначе, если убрать else?
function checkAge(age) {
    if (age > 18) {
        return true;
    }
    // ...
    return confirm('Родители разрешили?');
}
//Answer: ----------------------------------------------------------------------------
                                               not
//--------------------------------------------------------------------------------------

//Перепишите функцию, используя оператор '?' или '||'
/*
 Следующая функция возвращает true, если параметр age больше 18.

В ином случае она задаёт вопрос confirm и возвращает его результат.
 */
function checkAge(age) {
    if (age > 18) {
        return true;
    } else {
        return confirm('Родители разрешили?');
    }
}

/* Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.

Сделайте два варианта функции checkAge:

Используя оператор ?
Используя оператор || 
*/
//--------------------------------------------------  Answer

function checkAge(age) {
    return age > 18 ? true : confirm('Родители разрешили?');
}

function checkAge(age) {
    return age > 18 || confirm('Родители разрешили?');
}
//--------------------------------------------------------


//Функция min(a, b)
/* 
Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.

Пример вызовов:
min(2, 5) == 2
min(3, -1) == -1
min(1, 1) == 1
*/

//--------------------------------------------------  Answer
function choiceMin(a, b) {
    return a < b ? a : b;
}
//--------------------------------------------------------



//Функция pow(x,n)
/* 
Напишите функцию pow(x,n), которая возвращает x в степени n. Иначе говоря, умножает x на себя n раз и возвращает результат.
pow(3, 2) = 3 * 3 = 9
pow(3, 3) = 3 * 3 * 3 = 27
pow(1, 100) = 1 * 1 * ...* 1 = 1

Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).
*/

//--------------------------------------------------  Answer
// let numberX = prompt("x?", '');
// let expN = prompt("n?", '');


// function exponNumber(x, n) {
//     for (i = n; i > 0; i--) {
//         x *= x;
//     }
//     return x;
// }


// function checkNumber(x, n) {
//     if (n < 1) {
//         alert(`Степень ${n} не поддерживается, используйте натуральное число`);
//     } else {
//         alert(exponNumber(x, n));
//     }
// }

// checkNumber(numberX, expN);
//--------------------------------------------------------



// Function Expression

//Перепишите функции колбэки с помощью функций Function Expression
function ask(question, yes, no) {
    if (confirm(question)) yes()
    else no();
}

function showOk() {
    alert("Вы согласны.");
}

function showCancel() {
    alert("Вы отменили выполнение.");
}
//----------------------------------------------- Answer
function ask(question, yes, no) {
    if (confirm(question)) yes()
    else no();
}

ask(
    "Вы согласны?",
    function() { alert("Вы согласились."); },
    function() { alert("Вы отменили выполнение."); }
);
//--------------------------------------------------------



// Стрелочные функции

//Замените код Function Expression стрелочной функцией:
function ask(question, yes, no) {
  if (confirm(question)) yes()
  else no();
}

ask(
  "Вы согласны?",
  function() { alert("Вы согласились."); },
  function() { alert("Вы отменили выполнение."); }
);

//----------------------------------------------- Answer

ask(
    "Вы согласны?",
    () => alert("Вы согласились."),
    () => alert("Вы отменили выполнение.")
);
